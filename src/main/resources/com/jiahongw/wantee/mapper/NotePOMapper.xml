<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiahongw.wantee.mapper.NotePOMapper">
  <resultMap id="BaseResultMap" type="com.jiahongw.wantee.entity.NotePO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tag_id_list" jdbcType="VARCHAR" property="tagIdList" />
    <result column="resource_id_list" jdbcType="VARCHAR" property="resourceIdList" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="updater_id" jdbcType="VARCHAR" property="updaterId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jiahongw.wantee.entity.NotePO">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, tag_id_list, resource_id_list, status, creator_id, create_time, updater_id, update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from note
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from note
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jiahongw.wantee.entity.NotePO">
    insert into note (id, tag_id_list, resource_id_list, 
      status, creator_id, create_time, 
      updater_id, update_time, content
      )
    values (#{id,jdbcType=BIGINT}, #{tagIdList,jdbcType=VARCHAR}, #{resourceIdList,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{creatorId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updaterId,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jiahongw.wantee.entity.NotePO">
    insert into note
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tagIdList != null">
        tag_id_list,
      </if>
      <if test="resourceIdList != null">
        resource_id_list,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creatorId != null">
        creator_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updaterId != null">
        updater_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tagIdList != null">
        #{tagIdList,jdbcType=VARCHAR},
      </if>
      <if test="resourceIdList != null">
        #{resourceIdList,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null">
        #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null">
        #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiahongw.wantee.entity.NotePO">
    update note
    <set>
      <if test="tagIdList != null">
        tag_id_list = #{tagIdList,jdbcType=VARCHAR},
      </if>
      <if test="resourceIdList != null">
        resource_id_list = #{resourceIdList,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null">
        updater_id = #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jiahongw.wantee.entity.NotePO">
    update note
    set tag_id_list = #{tagIdList,jdbcType=VARCHAR},
      resource_id_list = #{resourceIdList,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      creator_id = #{creatorId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiahongw.wantee.entity.NotePO">
    update note
    set tag_id_list = #{tagIdList,jdbcType=VARCHAR},
      resource_id_list = #{resourceIdList,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      creator_id = #{creatorId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>